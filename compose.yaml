services:
  # PostgreSQL - relational database management system
  postgres:
    image: postgres
    container_name: files_manager_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # pgAdmin - web-based database management tool for PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: files_manager_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # Email for pgAdmin login
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Password for pgAdmin login
    ports:
      - "5050:80" # Expose pgAdmin on port 5050
    depends_on:
      - postgres

  # MinIO - object storage server
  minio:
    image: minio/minio
    container_name: files_manager_minio
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER} # MinIO root user
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD} # MinIO root password
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    volumes:
      - minio_data:/data

  # Zookeeper - needed for Kafka cluster coordination
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: files_manager_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka - message broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: files_manager_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  # Kafdrop - web interface for viewing and managing Kafka
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: files_manager_kafdrop
    depends_on:
      - kafka
    ports:
      - "9100:9000" # Kafdrop UI
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"

volumes:
  postgres_data:
  minio_data: